package pageObjects;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
import java.time.Duration;

public class ValidateAccountBalancesPage_TC6 {

    WebDriver driver;
    WebDriverWait wait;

    public ValidateAccountBalancesPage_TC6(WebDriver driver) {
        this.driver = driver;
        wait = new WebDriverWait(driver, Duration.ofSeconds(10)); // ✅ Fixed WebDriverWait
        PageFactory.initElements(driver, this);
    }

 
    // ✅ Transfer Funds Tab (Step 3)
    @FindBy(id = "transfer_funds_tab")
    private WebElement transferFundsTab;

    // ✅ From Account Dropdown (Step 4)
    @FindBy(id = "tf_fromAccountId")
    private WebElement fromAccountDropdown;

    // ✅ To Account Dropdown (Step 5)
    @FindBy(id = "tf_toAccountId")
    private WebElement toAccountDropdown;

    // ✅ Amount Input Field (Step 6)
    @FindBy(id = "tf_amount")
    private WebElement amountInput;

    // ✅ Submit Button (Step 7)
    @FindBy(id = "btn_submit")
    private WebElement submitButton;

    // ✅ Success Message (Step 8)
    @FindBy(xpath = "//div[@class='alert alert-success']")
    private WebElement successMessage;

    public void navigateToTransferFunds() {
        // Click Account Summary
        wait.until(ExpectedConditions.elementToBeClickable(transferFundsTab)).click(); // Click Transfer Funds
    }

    public void selectAccountsAndAmount() {
        wait.until(ExpectedConditions.elementToBeClickable(fromAccountDropdown));
        new Select(fromAccountDropdown).selectByValue("1"); // ✅ Properly select "Savings(Avail. balance = $1000)"

        wait.until(ExpectedConditions.elementToBeClickable(toAccountDropdown));
        new Select(toAccountDropdown).selectByValue("1"); // ✅ Properly select "Savings(Avail. balance = $1000)"

        wait.until(ExpectedConditions.visibilityOf(amountInput)).sendKeys("1000"); // Enter amount
    }

    public void clickSubmit() {
        wait.until(ExpectedConditions.elementToBeClickable(submitButton)).click(); // Click Submit
    }

    public String getSuccessMessage() {
        return wait.until(ExpectedConditions.visibilityOf(successMessage)).getText();
    }
}
