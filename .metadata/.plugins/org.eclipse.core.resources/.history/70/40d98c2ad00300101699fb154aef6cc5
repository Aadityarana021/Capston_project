package pageObjects;

import java.time.Duration;
import org.openqa.selenium.By;
import org.openqa.selenium.TimeoutException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

public class FundTransferInsufficientBalancePage_TC7 {
    WebDriver driver;
    WebDriverWait wait;

    public FundTransferInsufficientBalancePage_TC7(WebDriver driver) {
        this.driver = driver;
        this.wait = new WebDriverWait(driver, Duration.ofSeconds(15)); // ✅ Explicit wait
        PageFactory.initElements(driver, this);
    }

    // ✅ Online Banking Link
    @FindBy(xpath = "//strong[normalize-space()='Online Banking']")
    private WebElement onlineBankingLink;

    // ✅ Account Summary Link
    @FindBy(id = "account_summary_link")
    private WebElement accountSummaryLink;

    // ✅ Transfer Funds Tab
    @FindBy(id = "transfer_funds_tab")
    private WebElement transferFundsTab;

    // ✅ From Account Dropdown
    @FindBy(id = "tf_fromAccountId")
    private WebElement fromAccountDropdown;

    // ✅ To Account Dropdown
    @FindBy(id = "tf_toAccountId")
    private WebElement toAccountDropdown;

    // ✅ Amount Input Field
    @FindBy(id = "tf_amount")
    private WebElement amountInput;

    // ✅ Submit Button
    @FindBy(id = "btn_submit")
    private WebElement submitButton;

    // ✅ Confirmation Submit Button (If Needed)
    @FindBy(xpath = "//button[@class='btn btn-primary']")
    private WebElement confirmSubmitButton;

    // ✅ Error Message
    @FindBy(xpath = "//div[contains(@class, 'alert-error')]")
    private WebElement errorMessage;

    public void navigateToTransferFunds() {
        wait.until(ExpectedConditions.elementToBeClickable(onlineBankingLink)).click();
        wait.until(ExpectedConditions.elementToBeClickable(accountSummaryLink)).click();
        wait.until(ExpectedConditions.elementToBeClickable(transferFundsTab)).click();
    }

    public void selectInsufficientFundsAccount() {
        Select fromAccount = new Select(wait.until(ExpectedConditions.visibilityOf(fromAccountDropdown)));
        fromAccount.selectByIndex(1); // ✅ Select insufficient funds account

        Select toAccount = new Select(wait.until(ExpectedConditions.visibilityOf(toAccountDropdown)));
        toAccount.selectByIndex(2); // ✅ Select another account

        wait.until(ExpectedConditions.visibilityOf(amountInput)).sendKeys("999999"); // ✅ Large amount
    }

    public void clickSubmit() {
        System.out.println("✅ Clicking Submit Button...");
        wait.until(ExpectedConditions.elementToBeClickable(submitButton)).click(); // ✅ Click main submit button
        
        try {
            wait.until(ExpectedConditions.elementToBeClickable(confirmSubmitButton)).click();
        } catch (TimeoutException e) {
            System.out.println("ℹ No confirmation button found. Proceeding...");
        }
    }

    public String getErrorMessage() {
        try {
            return wait.until(ExpectedConditions.visibilityOf(errorMessage)).getText();
        } catch (TimeoutException e) {
            return "No error message found.";
        }
    }
}
