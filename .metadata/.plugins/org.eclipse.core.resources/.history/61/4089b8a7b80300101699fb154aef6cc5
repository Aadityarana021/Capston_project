package stepDefinitions.accountSummary_TC15;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import io.cucumber.java.en.*;
import static org.testng.Assert.*;

import java.time.Duration;

public class LogoutSteps_TC15 {
    WebDriver driver;
    WebDriverWait wait;

    public LogoutSteps_TC15() {
        driver = stepDefinitions.accountSummary_TC4.AccountSummaryLoginSteps_TC4.getDriver();
        wait = new WebDriverWait(driver, Duration.ofSeconds(10));
    }

    @When("User clicks on the Logout button")
    public void user_clicks_on_logout_button() {
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));

        // Click on the "Settings" menu first
        WebElement settingsMenu = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//*[@id='settingsBox']/ul/li[3]/a/b")));
        settingsMenu.click();

        // Now, click the Logout button
        WebElement logoutButton = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//*[@id='logout_link']")));
        logoutButton.click();

       
    }

    @Then("User should be redirected to the login page")
    public void verify_user_redirected_to_login_page() {
        // Wait for the login page to appear
        wait.until(ExpectedConditions.urlContains("login.html"));

        // Verify that the login form is displayed
        boolean isLoginDisplayed = driver.findElement(By.id("user_login")).isDisplayed();
        assertTrue(isLoginDisplayed, "❌ Logout failed! Login page is not displayed.");
        
        System.out.println("✅ Logout Successful! User is redirected to the login page.");
    }
}
